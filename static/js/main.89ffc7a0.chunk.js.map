{"version":3,"sources":["components/Card.js","components/Scoreboard.js","components/Cards.js","components/Instructions.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","useState","value","className","style","backgroundColor","background","onClick","Scoreboard","currentScore","highScore","Cards","setCurrentScore","setHighScore","chosenCards","setChosenCards","handleClick","e","cardValue","target","includes","clickedSameCard","clickedNewCard","cards","selected","alert","reset","push","sort","Math","random","Instructions","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSAkBeA,EAfF,SAACC,GAAW,IAAD,EACNC,mBAASD,EAAME,OAAxBA,EADe,oBAYtB,OARE,wBACEC,UAAU,OACVC,MAAO,CAACC,gBAAiBL,EAAMM,YAC/BC,QAASP,EAAMO,QACfL,MAAOA,KCEEM,G,MAVI,SAACR,GAOlB,OAJE,sBAAKG,UAAU,aAAf,4BACkBH,EAAMS,aADxB,kBACqDT,EAAMU,eCgEhDC,G,MAlED,WAAO,IAAD,EACsBV,mBAAS,GAD/B,mBACXQ,EADW,KACGG,EADH,OAEgBX,mBAAS,GAFzB,mBAEXS,EAFW,KAEAG,EAFA,OAIkBZ,mBAAS,IAJ3B,mBAIba,EAJa,KAIAC,EAJA,KAMZC,EAAc,SAACC,GACnB,IAAIC,EAAYD,EAAEE,OAAOjB,MACtBY,EAAYM,SAASF,GACtBG,EAAgBH,GAEhBI,EAAeJ,IAIfK,EAAQ,CACV,cAAC,EAAD,CAAcrB,MAAM,IAAII,WAAW,UAAUC,QAASS,GAA5C,KACV,cAAC,EAAD,CAAcd,MAAM,IAAII,WAAW,UAAUC,QAASS,GAA5C,KACV,cAAC,EAAD,CAAcd,MAAM,IAAII,WAAW,UAAUC,QAASS,GAA5C,KACV,cAAC,EAAD,CAAcd,MAAM,IAAII,WAAW,UAAUC,QAASS,GAA5C,KACV,cAAC,EAAD,CAAcd,MAAM,IAAII,WAAW,UAAUC,QAASS,GAA5C,KACV,cAAC,EAAD,CAAcd,MAAM,IAAII,WAAW,UAAUC,QAASS,GAA5C,KACV,cAAC,EAAD,CAAcd,MAAM,IAAII,WAAW,UAAUC,QAASS,GAA5C,KACV,cAAC,EAAD,CAAcd,MAAM,IAAII,WAAW,UAAUC,QAASS,GAA5C,KACV,cAAC,EAAD,CAAcd,MAAM,IAAII,WAAW,UAAUC,QAASS,GAA5C,KACV,cAAC,EAAD,CAAed,MAAM,KAAKI,WAAW,UAAUC,QAASS,GAA9C,OAONK,EAAkB,SAACG,GACpBf,EAAeC,GAChBG,EAAaJ,GAEfgB,MAAM,mCACNC,KAGIA,EAAQ,WACZd,EAAgB,GAChBG,EAAe,KAGXO,EAAiB,SAACE,GACtBZ,EAAgBH,EAAe,GACX,IAAjBA,IACDgB,MAAM,0BACNC,IACAb,EAAa,IAEfC,EAAYa,KAAKH,IAWnB,OAPE,gCACE,qBAAKrB,UAAU,QAAf,SA5BKoB,EAAMK,MAAK,kBAAKC,KAAKC,SAAW,QA+BnC,cAAC,EAAD,CAAYrB,aAAcA,EAAcC,UAAWA,SCnD5CqB,EAZM,WASnB,OAPE,qBAAK5B,UAAU,aAAf,SACE,gFAAkD,uBAAlD,kCACkC,uBADlC,6BCUS6B,MAVf,WAEE,OACE,sBAAK7B,UAAU,MAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,QCEO8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.89ffc7a0.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './card.css';\n\nconst Card = (props) => {\n  const [value] = useState(props.value);\n\n  let cardContent =\n    <button\n      className=\"card\"\n      style={{backgroundColor: props.background}}\n      onClick={props.onClick}\n      value={value}\n    >\n    </button>\n\n  return cardContent;\n}\n\nexport default Card;","import React from 'react';\nimport './scoreboard.css';\n\nconst Scoreboard = (props) => {\n\n  let content =\n    <div className=\"scoreboard\">\n      Current Score: {props.currentScore} | High Score: {props.highScore}\n    </div>\n\n  return content;\n}\n\nexport default Scoreboard;","import React, { useState } from 'react';\nimport Card from './Card';\nimport Scoreboard from './Scoreboard'\nimport './cards.css'\n\nconst Cards = () => {\n  const [currentScore, setCurrentScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n  // const [selectedCard, setSelectedCard] = useState();\n  let [chosenCards, setChosenCards] = useState([]);\n\n  const handleClick = (e) => {\n    let cardValue = e.target.value;\n    if(chosenCards.includes(cardValue)) {\n      clickedSameCard(cardValue);\n    } else {\n      clickedNewCard(cardValue);\n    }\n  }\n\n  let cards = [\n    <Card key=\"1\" value=\"1\" background=\"#7FFFD4\" onClick={handleClick} />,\n    <Card key=\"2\" value=\"2\" background=\"#6495ED\" onClick={handleClick} />,\n    <Card key=\"3\" value=\"3\" background=\"#DC143C\" onClick={handleClick} />,\n    <Card key=\"4\" value=\"4\" background=\"#40E0D0\" onClick={handleClick} />,\n    <Card key=\"5\" value=\"5\" background=\"#9932CC\" onClick={handleClick} />,\n    <Card key=\"6\" value=\"6\" background=\"#2E8B57\" onClick={handleClick} />,\n    <Card key=\"7\" value=\"7\" background=\"#FF69B4\" onClick={handleClick} />,\n    <Card key=\"8\" value=\"8\" background=\"#90EE90\" onClick={handleClick} />,\n    <Card key=\"9\" value=\"9\" background=\"#FFA500\" onClick={handleClick} />,\n    <Card key=\"10\" value=\"10\" background=\"#FF6347\" onClick={handleClick} />\n  ];\n\n  const sortCards = () => {\n    return cards.sort(()=> Math.random() - 0.5);\n  };\n\n  const clickedSameCard = (selected) => {\n    if(currentScore > highScore) {\n      setHighScore(currentScore);\n    }\n    alert(\"Oops! You already clicked that!\");\n    reset();\n  };\n\n  const reset = () => {\n    setCurrentScore(0);\n    setChosenCards([]);\n  }\n\n  const clickedNewCard = (selected) => {\n    setCurrentScore(currentScore + 1);\n    if(currentScore === 9) {\n      alert(\"Great memory! You win!\")\n      reset();\n      setHighScore(0);\n    }\n    chosenCards.push(selected);\n  };\n\n  let cardsContent =\n    <div>\n      <div className=\"cards\">\n        {sortCards()}\n      </div>\n        <Scoreboard currentScore={currentScore} highScore={highScore} />\n    </div>\n\n  return cardsContent;\n}\n\nexport default Cards;","import React from 'react';\n\nconst Instructions = () => {\n  let content =\n    <div className=\"scoreboard\">\n      <p>The cards will shuffle each time you click one.<br />\n         Don't click the same one twice!<br />\n         Click all 10 to win!\n      </p>\n    </div>\n\n  return content;\n}\n\nexport default Instructions;","import React from 'react';\nimport './App.css';\nimport Cards from './components/Cards'\nimport Instructions from './components/Instructions'\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n        <Instructions />\n        <Cards />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}